/*
 * To change this template, choose Tools | Templates
 * and open the template in the editor.
 */

/*
 * Login.java
 *
 * Created on 8/09/2009, 08:26:37 PM
 */

package wordominaton;

import BDWorDomination.Cuadro;
import BDWorDomination.Letra;
import BDWorDomination.Persistencia;
import java.util.ArrayList;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.JOptionPane;
import org.jdesktop.application.Action;
import org.jdesktop.application.Task;

/**
 *
 * @author Andrés
 */
public class Login extends javax.swing.JPanel {

    /** Parámetros de entrada para la conexión a la base de datos
        Usuario  , Contraseña  , URL
     */
    public Login(WordominatonView con) {
        initComponents();
        contenedor = con;
        p = new Persistencia();
    }

    /** This method is called from within the constructor to
     * initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is
     * always regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jButton1 = new javax.swing.JButton();
        jButton2 = new javax.swing.JButton();
        jPasswordField1 = new javax.swing.JPasswordField();
        jTextField1 = new javax.swing.JTextField();
        jLabel1 = new javax.swing.JLabel();
        jLabel2 = new javax.swing.JLabel();
        jLabel3 = new javax.swing.JLabel();

        org.jdesktop.application.ResourceMap resourceMap = org.jdesktop.application.Application.getInstance(wordominaton.WordominatonApp.class).getContext().getResourceMap(Login.class);
        setBackground(resourceMap.getColor("Form.background")); // NOI18N
        setName("Form"); // NOI18N

        javax.swing.ActionMap actionMap = org.jdesktop.application.Application.getInstance(wordominaton.WordominatonApp.class).getContext().getActionMap(Login.class, this);
        jButton1.setAction(actionMap.get("confirmarUsuario")); // NOI18N
        jButton1.setText(resourceMap.getString("jButton1.text")); // NOI18N
        jButton1.setName("jButton1"); // NOI18N

        jButton2.setAction(actionMap.get("registrarUsuario")); // NOI18N
        jButton2.setText(resourceMap.getString("jButton2.text")); // NOI18N
        jButton2.setName("jButton2"); // NOI18N

        jPasswordField1.setName("jPasswordField1"); // NOI18N

        jTextField1.setName("jTextField1"); // NOI18N

        jLabel1.setFont(resourceMap.getFont("jLabel1.font")); // NOI18N
        jLabel1.setForeground(resourceMap.getColor("jLabel2.foreground")); // NOI18N
        jLabel1.setHorizontalAlignment(javax.swing.SwingConstants.RIGHT);
        jLabel1.setText(resourceMap.getString("jLabel1.text")); // NOI18N
        jLabel1.setName("jLabel1"); // NOI18N

        jLabel2.setFont(resourceMap.getFont("jLabel2.font")); // NOI18N
        jLabel2.setForeground(resourceMap.getColor("jLabel2.foreground")); // NOI18N
        jLabel2.setHorizontalAlignment(javax.swing.SwingConstants.RIGHT);
        jLabel2.setText(resourceMap.getString("jLabel2.text")); // NOI18N
        jLabel2.setName("jLabel2"); // NOI18N

        jLabel3.setForeground(resourceMap.getColor("jLabel3.foreground")); // NOI18N
        jLabel3.setText(resourceMap.getString("jLabel3.text")); // NOI18N
        jLabel3.setName("jLabel3"); // NOI18N

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(this);
        this.setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jLabel3, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addGap(136, 136, 136))
            .addGroup(layout.createSequentialGroup()
                .addGap(23, 23, 23)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(jLabel2, javax.swing.GroupLayout.PREFERRED_SIZE, 97, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel1, javax.swing.GroupLayout.PREFERRED_SIZE, 97, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jButton1, javax.swing.GroupLayout.PREFERRED_SIZE, 88, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                        .addComponent(jPasswordField1)
                        .addComponent(jTextField1, javax.swing.GroupLayout.PREFERRED_SIZE, 127, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addComponent(jButton2))
                .addContainerGap(103, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(9, 9, 9)
                .addComponent(jLabel3)
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel1, javax.swing.GroupLayout.PREFERRED_SIZE, 26, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jTextField1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel2, javax.swing.GroupLayout.PREFERRED_SIZE, 21, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jPasswordField1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jButton2)
                    .addComponent(jButton1))
                .addContainerGap(27, Short.MAX_VALUE))
        );
    }// </editor-fold>//GEN-END:initComponents

    @Action
    public Task confirmarUsuario() {
        return new ConfirmarUsuarioTask(org.jdesktop.application.Application.getInstance(wordominaton.WordominatonApp.class));
    }

    private class ConfirmarUsuarioTask extends org.jdesktop.application.Task<Object, Void> {
        ConfirmarUsuarioTask(org.jdesktop.application.Application app) {
            super(app);
            jButton2.setEnabled(false);
        }
        @Override protected Object doInBackground() {  
            

            try {
                avanzar(6);

                setMessage("Verificando integridad de los datos...");
                Thread.sleep(50L);
                avanzar(6);

                        // Se mete todo en un try por los posibles errores de MySQL
                setMessage("Confirmando en la base de datos...");
                Thread.sleep(50L);
                avanzar(6);
        try
        {

            ArrayList al = p.selectSQL("select nombre from usuario where nombre='"
                    +jTextField1.getText()+"' and pass='"+jPasswordField1.getText()+"'",1);
            
            if (al.size()!=0){
                setMessage("Usuario aceptado.");
                Thread.sleep(70L);
                avanzar(6);
                Thread.sleep(45L);

                //carga de datos de las fichas
                //inicializa las url de las fichas
                Cuadro[][] c = new Cuadro[15][15];

                 for(int j=0; j<=14;j++){
                 for(int i=0; i<=14;i++){
                    c[j][i] = new Cuadro(j, i, new Letra(""));
                 }}
                contenedor.iniciarJuego(c, usuario,  pass, url);
            }
            else{
                setMessage("Usuario o contraseña incorrectos.");                
                setProgress(4, 0, 4);
                Thread.sleep(45L);
                }
            
        }
        catch (Exception e)
        {   if (e.getCause().getMessage().equals("Connection refused: connect"))
                JOptionPane.showMessageDialog(null, "El servidor de datos esta caido y no se puede establecer la conexión.","Error: " , JOptionPane.ERROR_MESSAGE);
            else
                JOptionPane.showMessageDialog(null, "No se puede acceder a la Internet y no se puede establecer la conexión.","Error: " , JOptionPane.ERROR_MESSAGE);
            Thread.sleep(300L);
        }


            } catch (InterruptedException ex) {Logger.getLogger(WordominatonView.class.getName()).log(Level.SEVERE, null, ex);}
            return null;  // return your result
        }
        //avanza conforme el limite que se le haya impuesto, es decir que si por ejemplo se pone 5
        //solo deben haber 5 avanzar() en todo el metodo
        private void avanzar(int limite) throws InterruptedException{
            if (getProgress()<100){
            setProgress(getProgress()+(100/limite),0,100);
            }
        }
        @Override protected void succeeded(Object result) {
             jButton2.setEnabled(true);
        }

    }

    @Action
    public void registrarUsuario(){
    contenedor.iniciarRegistro();
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton jButton1;
    private javax.swing.JButton jButton2;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JPasswordField jPasswordField1;
    private javax.swing.JTextField jTextField1;
    // End of variables declaration//GEN-END:variables

    private String usuario;
    private String url;
    private String pass;
    private WordominatonView contenedor;
    private Persistencia p;
}
