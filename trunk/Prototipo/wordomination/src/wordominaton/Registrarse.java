/*
 * To change this template, choose Tools | Templates
 * and open the template in the editor.
 */

/*
 * Registrarse.java
 *
 * Created on 7/09/2009, 02:33:40 PM
 */

package wordominaton;

import org.jdesktop.application.Action;
import org.jdesktop.application.Task;
import java.sql.*;
import javax.swing.JOptionPane;

/**
 *
 * @author Andrés
 */
public class Registrarse extends javax.swing.JPanel {

    /** Creates new form Registrarse */
    public Registrarse() {
        initComponents();
    }

    Registrarse(String u, String c, String ur,WordominatonView con) {
        initComponents();
        usuario = u;
        pass = c;
        url = ur;
        contenedor = con;

    }

    /** This method is called from within the constructor to
     * initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is
     * always regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jLabel1 = new javax.swing.JLabel();
        jLabel3 = new javax.swing.JLabel();
        jTextField1 = new javax.swing.JTextField();
        jPasswordField1 = new javax.swing.JPasswordField();
        jLabel2 = new javax.swing.JLabel();
        jButton1 = new javax.swing.JButton();
        jButton2 = new javax.swing.JButton();

        setName("Form"); // NOI18N

        org.jdesktop.application.ResourceMap resourceMap = org.jdesktop.application.Application.getInstance(wordominaton.WordominatonApp.class).getContext().getResourceMap(Registrarse.class);
        jLabel1.setFont(resourceMap.getFont("jLabel1.font")); // NOI18N
        jLabel1.setForeground(resourceMap.getColor("jLabel1.foreground")); // NOI18N
        jLabel1.setHorizontalAlignment(javax.swing.SwingConstants.RIGHT);
        jLabel1.setText(resourceMap.getString("jLabel1.text")); // NOI18N
        jLabel1.setName("jLabel1"); // NOI18N

        jLabel3.setText(resourceMap.getString("jLabel3.text")); // NOI18N
        jLabel3.setName("jLabel3"); // NOI18N

        jTextField1.setName("jTextField1"); // NOI18N

        jPasswordField1.setName("jPasswordField1"); // NOI18N

        jLabel2.setFont(resourceMap.getFont("jLabel2.font")); // NOI18N
        jLabel2.setForeground(resourceMap.getColor("jLabel2.foreground")); // NOI18N
        jLabel2.setHorizontalAlignment(javax.swing.SwingConstants.RIGHT);
        jLabel2.setText(resourceMap.getString("jLabel2.text")); // NOI18N
        jLabel2.setName("jLabel2"); // NOI18N

        javax.swing.ActionMap actionMap = org.jdesktop.application.Application.getInstance(wordominaton.WordominatonApp.class).getContext().getActionMap(Registrarse.class, this);
        jButton1.setAction(actionMap.get("guardarUsuario")); // NOI18N
        jButton1.setText(resourceMap.getString("jButton1.text")); // NOI18N
        jButton1.setName("jButton1"); // NOI18N

        jButton2.setAction(actionMap.get("volverALogin")); // NOI18N
        jButton2.setText(resourceMap.getString("jButton2.text")); // NOI18N
        jButton2.setName("jButton2"); // NOI18N

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(this);
        this.setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jLabel3, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addContainerGap(40, Short.MAX_VALUE))
            .addGroup(layout.createSequentialGroup()
                .addGap(19, 19, 19)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(jLabel2, javax.swing.GroupLayout.PREFERRED_SIZE, 97, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel1, javax.swing.GroupLayout.PREFERRED_SIZE, 97, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jButton1, javax.swing.GroupLayout.PREFERRED_SIZE, 88, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                        .addComponent(jPasswordField1)
                        .addComponent(jTextField1, javax.swing.GroupLayout.PREFERRED_SIZE, 127, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addComponent(jButton2))
                .addContainerGap(137, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(8, 8, 8)
                .addComponent(jLabel3)
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel1, javax.swing.GroupLayout.PREFERRED_SIZE, 26, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jTextField1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel2, javax.swing.GroupLayout.PREFERRED_SIZE, 21, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jPasswordField1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jButton1)
                    .addComponent(jButton2))
                .addContainerGap(38, Short.MAX_VALUE))
        );
    }// </editor-fold>//GEN-END:initComponents

    @Action
    public void volverALogin() {
    contenedor.iniciarLogin();
    }

    @Action
    public Task guardarUsuario() {
        return new GuardarUsuarioTask(org.jdesktop.application.Application.getInstance(wordominaton.WordominatonApp.class));
    }

    private class GuardarUsuarioTask extends org.jdesktop.application.Task<Object, Void> {
        GuardarUsuarioTask(org.jdesktop.application.Application app) {
            // Runs on the EDT.  Copy GUI state that
            // doInBackground() depends on from parameters
            // to GuardarUsuarioTask fields, here.
            super(app);
        }
        @Override protected Object doInBackground() {
           try{
           if(jTextField1.getText().equals("")){setMessage("Falta llenar el campo de Usuario.");}
           else if(jPasswordField1.getText().equals("")){setMessage("Falta llenar el campo de Password.");}
           else {
            setProgress(0, 0, 4);

            setMessage("Verificando integridad de los datos...");
            Thread.sleep(1000L);
            setProgress(1, 0, 4);

            // Se mete todo en un try por los posibles errores de MySQL
            setMessage("Confirmando en la base de datos...");
            Thread.sleep(500L);
            setProgress(2, 0, 4);

            
                DriverManager.registerDriver(new org.gjt.mm.mysql.Driver());
                Connection conexion = DriverManager.getConnection (url,usuario,pass);
                Statement s = conexion.createStatement();

                setMessage("Revisando...");
                Thread.sleep(150L);
                setProgress(3, 0, 4);

                    ResultSet rs = s.executeQuery ("select * from usuario where " +
                        "nombre='"+jTextField1.getText()+ "' and " +
                        "pass='"+jPasswordField1.getText()+"'");
                    if (rs.first()){
                    setMessage("El usuario ya existe.");
                    Thread.sleep(150L);
                    setProgress(4, 0, 4);
                    conexion.close();
                    }
                    else{
                        setProgress(4, 0, 5);
                        int re = s.executeUpdate("INSERT INTO USUARIO VALUES('"+
                        jTextField1.getText()+"','"+
                        jPasswordField1.getText()+"',0)");
                        setMessage("El usuario se ha registrado con exito.");
                        setProgress(5, 0, 5);
                        Thread.sleep(150L);
                        conexion.close();
                        }
                       }

            
            }catch (Exception e)
            {   if (e.getCause().getMessage().equals("Connection refused: connect"))
                JOptionPane.showMessageDialog(null, "El servidor de datos esta caido y no se puede establecer la conexión.","Error: " , JOptionPane.ERROR_MESSAGE);
            else
                JOptionPane.showMessageDialog(null, "No se puede acceder a la Internet y no se puede establecer la conexión.","Error: " , JOptionPane.ERROR_MESSAGE);
            }


            return null;  // return your result
        }

        @Override protected void succeeded(Object result) {
            // Runs on the EDT.  Update the GUI based on
            // the result computed by doInBackground().
        }
    }


    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton jButton1;
    private javax.swing.JButton jButton2;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JPasswordField jPasswordField1;
    private javax.swing.JTextField jTextField1;
    // End of variables declaration//GEN-END:variables

    private String usuario;
    private String url;
    private String pass;
    private WordominatonView contenedor;
}
